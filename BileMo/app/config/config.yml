imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    templating:
         engines: ['twig', 'php']

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

fos_rest:
    body_converter:
        enabled: true
        validate: true
        validation_errors_argument: violations
    view:
        formats: { json: true, xml: false, rss: false }
        view_response_listener: true
        mime_types:
            json: ['application/json', 'application/json;version=1.0', 'application/json;version=2.0']
    serializer:
        serialize_null: true
    format_listener:
        rules:
            - { path: '^/', priorities: ['json'], fallback_format: 'json' }
    param_fetcher_listener: force
    exception:
        enabled: true
        exception_controller: 'fos_rest.exception.controller:showAction'
        codes:
           { AppBundle\Exception\ResourceValidationException: 400, AppBundle\Exception\ResourceNotFoundException: 404, AppBundle\Exception\ResourceAccessForbiddenException: 403,\Exception: 500 }
        messages:
           { AppBundle\Exception\ResourceValidationException: true, AppBundle\Exception\ResourceNotFoundException: true, AppBundle\Exception\ResourceAccessForbiddenException: true }
    versioning:
        enabled: true
        resolvers:
            #query: true # Query parameter: /users?version=v1
            #custom_header: true # X-Accept-Version header
            media_type: # Accept header
                enabled: true
                regex: '/(v|version)=(?P<version>[0-9\.]+)/'

sensio_framework_extra:
#   view: { annotations: false }
    request: { converters: true }

fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\Customer
    from_email:
        address: contact@bilemo.com
        sender_name: bilemo

fos_oauth_server:
    db_driver: orm       # Drivers available: orm, mongodb, or propel
    client_class:        AppBundle\Entity\Client
    access_token_class:  AppBundle\Entity\AccessToken
    refresh_token_class: AppBundle\Entity\RefreshToken
    auth_code_class:     AppBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_provider.username
        options:
            access_token_lifetime: 3600
            token_type: Bearer
            supported_scopes: customer

nelmio_api_doc:
    areas:
        path_patterns: # an array of regexps
            - ^/api(?!/doc$)
        host_patterns:
            - ^api\.
    documentation:
        info:
            title: BileMo API Documentation
            description: API for Bilemo's Mobile Phones and users of BileMo's customers
            version: 1.0.0
        securityDefinitions:
            Bearer:
                type: oauth2
                tokenUrl: ^/oauth/v2/token
                flow: password
                in: header
        security:
            - Bearer: []
